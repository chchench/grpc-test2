syntax = "proto3";

option go_package = "./dataserver";

// option go_package = "google.golang.org/grpc/examples/route_guide/routeguide";

option java_multiple_files = true;

// option java_package = "io.grpc.examples.routeguide";

option java_outer_classname = "DataServerProto";

package dataserver;

// Interface exported by the server.
service DataServer {

  rpc ProcessData(stream c2sData) returns (stream s2cData) {}

  rpc GetLatestDataFile(DataFileType) returns (DataFilePayload) {}
}


message DataFileType {
  int32  kind                 = 1;
  string additional_attribute = 2;
}

message DataFilePayload {
  int32 kind      = 1;
  string filetype = 2;
  string filename = 3;
  string data     = 4;
}


// A c2sData is a message from the client to the server.
message c2sData {
  int32  kind        = 1;
  string str_data   = 2;
  bytes  bytes_data = 3;
}

// A s2cData is a message from the server to the client.
message s2cData {
  int32  kind        = 1;
  string str_data   = 2;
  bytes  bytes_data = 3;
}

